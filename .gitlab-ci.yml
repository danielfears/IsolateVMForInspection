default:
  image: mcr.microsoft.com/powershell

variables:
  AZURE_SUBSCRIPTION_ID:
    description: "Subscription ID of the Azure subscription to use for the deployment"
    value: ""

  RESOURCE_GROUP_NAME:
    description: "Resource group name of the Azure resource group to use for the deployment"
    value: ""

  VM_NAME:
    description: "VM name of the Azure VM to use for the deployment"
    value: ""

  ISOLATION_SUBNET_RANGE:
    description: "Isolation subnet range to use for the deployment"
    value: ""

  BASTION_SUBNET_RANGE:
    description: "Bastion subnet range to use for the deployment"
    value: ""

stages:
  - resource_validate
  - create_subnets
  - create_nsg
  - associate_nsg_to_subnet
  - create_bastion_pip
  - move_vm_to_isolation_subnet
  - create_bastion_host
  - completion_output

before_script:
  - pwsh -Command "& { . .\IsolateVM.ps1; Invoke-UserLogin -AzureTenantId $AZURE_TENANT_ID -AzureClientId $AZURE_CLIENT_ID -AzureClientSecret $AZURE_CLIENT_SECRET -subscriptionId $AZURE_SUBSCRIPTION_ID -VMresourceGroupName $RESOURCE_GROUP_NAME -vmName $VM_NAME -subnetRange $ISOLATION_SUBNET_RANGE -bastionSubnet $BASTION_SUBNET_RANGE }"

resource_validate:
  stage: resource_validate
  script:
    - pwsh -Command "& { . .\IsolateVM.ps1; Invoke-SubscriptionInput; Invoke-ResourceGroupInput; Invoke-VMNameInput }"

create_subnets:
  stage: create_subnets
  script:
    - pwsh -Command "& { . .\IsolateVM.ps1; Invoke-CreateSubnets }"

create_nsg:
  stage: create_nsg
  script:
    - pwsh -Command "& { . .\IsolateVM.ps1; Invoke-CreateNSG }"

associate_nsg_to_subnet:
  stage: associate_nsg_to_subnet
  script:
    - pwsh -Command "& { . .\IsolateVM.ps1; Invoke-AssociateNSGtoSubnet }"

create_bastion_pip:
  stage: create_bastion_pip
  script:
    - pwsh -Command "& { . .\IsolateVM.ps1; Invoke-CreateBastionPIP }"

move_vm_to_isolation_subnet:
  stage: move_vm_to_isolation_subnet
  script:
    - pwsh -Command "& { . .\IsolateVM.ps1; Invoke-MoveVMtoIsolationSubnet }"

create_bastion_host:
  stage: create_bastion_host
  script:
    - pwsh -Command "& { . .\IsolateVM.ps1; Invoke-CreateBastionHost }"

completion_output:
  stage: completion_output
  script:
    - pwsh -Command "& { . .\IsolateVM.ps1; Invoke-CompletionOutput }"